{"ast":null,"code":"var _jsxFileName = \"/home/ayman-kotb/lab 1/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDom from 'react-dom/client';\nimport Buttons from './components/Buttons/index.tsx';\nimport Display from './components/Display/index.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet x = 0;\nexport default function App() {\n  _s();\n  const displayed = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"+\", \"÷\", \"×\", \"−\", \"%\"];\n  const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n  const [screen, setScreen] = React.useState('');\n  const [lastnum, setLas] = React.useState('');\n  const handleClick = e => {\n    if (screen === \"Error, Division by zero\" || screen === \"Error, Invalid Experssion\") {\n      setScreen('');\n      return;\n    }\n    if (e === \"C\" || e === \"CE\") setScreen('');else if (e === \"DEL\") setScreen(screen.slice(0, -1));else if (e === \"1/x\") {\n      if (screen.length > 1) setScreen('(1/(' + screen + '))');else setScreen('(1/' + screen + ')');\n    } else if (e === \"x²\") setScreen(screen + '^2');else if (e === \"+/-\") {\n      if (screen[0] === \"-\") setScreen(screen.slice(1));else setScreen('-' + screen);\n    } else if (e === \"=\") {\n      x = 1;\n      if (screen != \"\") {\n        console.log(screen);\n        const calc = async () => {\n          try {\n            const result = await fetch(\"http://localhost:8080/api/calculate\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                expression: screen\n              })\n            });\n            const data = await result.text();\n            setScreen(String(data));\n          } catch (error) {\n            console.error('Error:', error);\n            setScreen('Error');\n          }\n        };\n        calc();\n      }\n    } else if (e === \"√x\") setScreen('(' + screen + ')^0.5');else if (e === \".\" && screen[screen.length - 1] === \".\") setScreen(screen);else if (displayed.includes(e)) {\n      if (numbers.includes(e) && x === 1) {\n        setScreen(\"\" + e);\n        x = 0;\n      } else {\n        setScreen(screen + e);\n        x = 0;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calc\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: screen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        onButtonClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"J4FZj3++OywoIJ+lwKd5dnkvkUU=\");\n_c = App;\nconst root = ReactDom.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDom","Buttons","Display","jsxDEV","_jsxDEV","x","App","_s","displayed","numbers","screen","setScreen","useState","lastnum","setLas","handleClick","e","slice","length","console","log","calc","result","fetch","method","headers","body","JSON","stringify","expression","data","text","String","error","includes","children","id","value","fileName","_jsxFileName","lineNumber","columnNumber","onButtonClick","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/home/ayman-kotb/lab 1/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDom from 'react-dom/client';\nimport Buttons from './components/Buttons/index.tsx';\nimport Display from './components/Display/index.tsx';\nlet x =0 ;    \nexport default function App() {\n    const displayed = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"+\", \"÷\", \"×\", \"−\", \"%\"];\n    const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n    const [screen, setScreen] = React.useState<String>('');\n    const [lastnum, setLas] = React.useState<String>('');\n    const handleClick = (e) => {\n        if (screen === \"Error, Division by zero\" || screen=== \"Error, Invalid Experssion\"){\n            setScreen('');\n            return ;\n        }\n        if (e === \"C\" || e === \"CE\" ) setScreen('');\n        else if (e === \"DEL\") setScreen(screen.slice(0, -1));\n        else if (e === \"1/x\") {\n         if (screen.length>1) setScreen('(1/(' + screen + '))');\n         else   setScreen('(1/' + screen + ')');\n        }\n        else if (e === \"x²\") setScreen( screen + '^2');\n        else if (e === \"+/-\"){\n            if (screen[0] === \"-\") setScreen(screen.slice(1));\n            else setScreen('-'+screen);\n        }\n        else if (e === \"=\") {\n            x=1;\n            if (screen != \"\") {\n                console.log(screen);\n                const calc = async () => {\n                    try{\n                        const result = await fetch(\n                            \"http://localhost:8080/api/calculate\",{\n                                method: \"POST\",\n                                headers: {\n                                    \"Content-Type\": \"application/json\",\n                                },\n                                body: JSON.stringify({ expression: screen })\n                            });\n                        const data = await result.text();\n                        \n                        setScreen(String(data));    \n                        }\n                        catch(error){\n                            console.error('Error:', error);\n                            setScreen('Error');\n                        }\n                    };\n                    calc();\n            }\n        }\n        else if (e === \"√x\") setScreen( '('+screen + ')^0.5');\n        else if (e === \".\" && screen[screen.length - 1] === \".\") setScreen(screen);\n        else if (displayed.includes(e)){\n            if (numbers.includes(e) && x===1) {\n                setScreen(\"\"+e); \n                x = 0; \n            }\n            else{\n                setScreen(screen + e);\n                x =0;\n            } \n        } \n    };\n\n\n    return (\n        <main>\n            <div id=\"calc\">\n                <Display value={screen} />\n                <Buttons onButtonClick={handleClick} />\n            </div>\n        </main>\n    );\n}\nconst root = ReactDom.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <App />\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}